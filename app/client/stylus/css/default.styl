@import 'nib'
@import '../normalize'
@import '../variables'
@import '../utils'
@import '../mixins'
@import '../grid'
@import '../typography'
@import '../components'

.clearfix
  clearfix()

html
  background-color: $black
  color: $white
  font: $font-base $serif
  line-height: $line-base
  max-width: 100%
  width: 100%

body
  background-position: top left
  background-repeat: repeat
  image: "../images/dark_stripe.png" 3px 3px
  margin: 0

  &.show-grid
    background-color: $white
    image: "../images/grid_overlay.png" 1px $line-base

header
  width: 100%

article
  margin-bottom: $line-base
  width: 100%

section
  @extend .clearfix
  margin: 0 auto
  max-width: $container-width
  width: 100%

footer
  background: $black
  box-shadow: inset 0 10px 10px -10px $true-black
  clear: both
  padding: $line-base 0
  position: relative
  width: 100%

  &:before
    background: $black
    box-shadow: inset 10px 10px 10px -10px $true-black
    content: ''
    display: block
    height: $line-base
    left: 50%
    margin-left: -1 * (@height / 2)
    position: absolute
    top: -1 * (@height / 2)
    transform: rotate(45deg)
    width: @height

  hgroup
    float: none
    margin: 0 auto
    max-width: $container-width
    width: 100%

.slice
  @extend section
  background: $black
  box-shadow: 0 1px 0 rgba($gray, 0.3), inset 0 10px 10px -10px $true-black
  margin-bottom: $line-base
  max-width: 100%
  width: 100%

  section
    padding-top: $line-base

.slice-fiber
  @extend .slice
  background-color: $black
  background-position: top left
  background-repeat: repeat
  box-shadow: 0 1px 0 rgba($white, 0.3), inset 0 1px 0 $true-black, inset 0 10px 10px -10px $true-black
  image: "../images/fiber.png" 4px 8px
  text-shadow: 0 2px 5px $black

.swatch
  span
    background: rgba($black,0.8)
    color: $white
    display: block
    float: left
    padding: ($line-base / 4)
    text-shadow: 0 2px 5px $black
    width: auto

  .dark-blue
    @extend .clearfix
    background: $dark-blue
    padding: ($line-base / 4)
    position: relative

  .mid-blue
    @extend .swatch .dark-blue
    background-color: $mid-blue

  .bright-blue
    @extend .swatch .dark-blue
    background-color: $bright-blue

for color in "red" "yellow" "green" "purple" "orange"
  .swatch .dark-{unquote(color)}
    @extend .swatch .dark-blue
    background-color: hashGet($colors,"dark-" + color)

  .swatch .mid-{unquote(color)}
    @extend .swatch .dark-blue
    background-color: hashGet($colors,"mid-" + color)

  .swatch .bright-{unquote(color)}
    @extend .swatch .dark-blue
    background-color: hashGet($colors,"bright-" + color)

for color in $colors
  .bg-{unquote(color[0])}
    background-color: color[1]

  .text-{unquote(color[0])}
    color: color[1]


for num in 1..$columns
  #grid .grid-{num} span
    background: $true-black
    border-radius: 4px
    box-shadow: 0 0 0 1px $dark-gray
    display: block
    text-align: center

    &:hover
      background: $dark-gray
      box-shadow: 0 0 0 1px $gray

@media $medium-width
  section, footer hgroup
    max-width: $container-medium-width

@media $large-width
  section, footer hgroup
    max-width: $container-large-width
